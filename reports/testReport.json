{
  "stats": {
    "suites": 4,
    "tests": 20,
    "passes": 19,
    "pending": 0,
    "failures": 1,
    "start": "2024-03-25T04:17:45.238Z",
    "end": "2024-03-25T04:19:52.812Z",
    "duration": 127574,
    "testsRegistered": 20,
    "passPercent": 95,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "309f1f7c-4737-4874-abf2-98df0a90ba27",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91c4e38c-44d7-4046-a74e-94bbc6992857",
          "title": "Searching games by genre",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\genres.test.ts",
          "file": "\\tests\\genres.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Searching games by genre\"",
              "fullTitle": "Searching games by genre \"before each\" hook in \"Searching games by genre\"",
              "timedOut": false,
              "duration": 1526,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\");genres=await getGenresArray(driver)",
              "err": {},
              "uuid": "df988e14-6fb4-4ffe-a6df-095ff2a21dad",
              "parentUUID": "91c4e38c-44d7-4046-a74e-94bbc6992857",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Searching games by genre\"",
              "fullTitle": "Searching games by genre \"after each\" hook in \"Searching games by genre\"",
              "timedOut": false,
              "duration": 1038,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "ac6079c5-d333-4220-8401-46a5bf2ecbc4",
              "parentUUID": "91c4e38c-44d7-4046-a74e-94bbc6992857",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Selected genre style",
              "fullTitle": "Searching games by genre Selected genre style",
              "timedOut": false,
              "duration": 10901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultColor=await genres[genres.length-1].getCssValue(\"color\");const defaultSize=await genres[genres.length-1].getCssValue(\"font-size\");for(const genre of genres){await genre.click();await driver.sleep(500);const selectedColor=await genre.getCssValue(\"color\");const selectedSize=await genre.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize)}",
              "err": {},
              "uuid": "e9541e20-1c30-4ad5-a092-fcbb113d4d81",
              "parentUUID": "91c4e38c-44d7-4046-a74e-94bbc6992857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page header updates with the selected genre title",
              "fullTitle": "Searching games by genre Page header updates with the selected genre title",
              "timedOut": false,
              "duration": 11050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const genre of genres){await genre.click();const selectedGenre=await genre.getText();const pageHeader=await getPageHeader(driver);if(selectedGenre===\"All Genres\")pageHeader.should.equal(\"Games\");else pageHeader.should.equal(selectedGenre);await driver.sleep(500)}",
              "err": {},
              "uuid": "5f79ce2d-3d39-455b-a2f7-52914bb54ef9",
              "parentUUID": "91c4e38c-44d7-4046-a74e-94bbc6992857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game grid updates when genre is selected",
              "fullTitle": "Searching games by genre Game grid updates when genre is selected",
              "timedOut": false,
              "duration": 23582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const genre of genres){if(await genre.getText()===\"All Genres\")continue;const gameTitles=await getGameCardsTitles(driver);await genre.click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles);await driver.sleep(500)}",
              "err": {},
              "uuid": "4b5ec036-b60a-4e66-ac4e-b490fc1a08e5",
              "parentUUID": "91c4e38c-44d7-4046-a74e-94bbc6992857",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9541e20-1c30-4ad5-a092-fcbb113d4d81",
            "5f79ce2d-3d39-455b-a2f7-52914bb54ef9",
            "4b5ec036-b60a-4e66-ac4e-b490fc1a08e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45533,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "cba6fec2-e7d8-4593-96f4-af8015502351",
          "title": "Overall page layout test suite",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\homePageLayout.test.ts",
          "file": "\\tests\\homePageLayout.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Overall page layout test suite\"",
              "fullTitle": "Overall page layout test suite \"before each\" hook in \"Overall page layout test suite\"",
              "timedOut": false,
              "duration": 1455,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\")",
              "err": {},
              "uuid": "d2a1ca2b-c8f7-4f78-8107-c762491ff818",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Overall page layout test suite\"",
              "fullTitle": "Overall page layout test suite \"after each\" hook in \"Overall page layout test suite\"",
              "timedOut": false,
              "duration": 1028,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "46330fe2-b79d-4351-91fc-77554c0b1a98",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Page title is correct",
              "fullTitle": "Overall page layout test suite Page title is correct",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const title=await driver.getTitle();title.should.equal(\"Game Explorer\")",
              "err": {},
              "uuid": "db591bf3-2649-4058-b013-4cbf26232b95",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page header is correct",
              "fullTitle": "Overall page layout test suite Page header is correct",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const header=await getPageHeader(driver);header.should.equal(\"Games\")",
              "err": {},
              "uuid": "ddd32981-8d88-4d1b-ba67-fbeebec1e538",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page logo is present and interactable",
              "fullTitle": "Overall page layout test suite Page logo is present and interactable",
              "timedOut": false,
              "duration": 294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await driver.wait(until.elementIsVisible(logo),1e4);await logo.click();const currentURL=await driver.getCurrentUrl();currentURL.should.equal(\"https://game-hub-lac-sigma.vercel.app/\")",
              "err": {},
              "uuid": "86a4644f-14f7-45fe-875b-15fcba76b444",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dark / Light mode switch",
              "fullTitle": "Overall page layout test suite Dark / Light mode switch",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const modeSwitch=await driver.findElement(By.css(\"nav.css-134xcib button\"));const initialColor=await getRGBcode(driver);await driver.wait(until.elementIsVisible(modeSwitch),1e4);await modeSwitch.click();const newColor=await getRGBcode(driver);if(initialColor===\"26, 32, 44\")newColor.should.equal(\"255, 255, 255\");else newColor.should.equal(\"26, 32, 44\")",
              "err": {},
              "uuid": "f74ff4e6-8d48-4fcf-9e32-412dc1cfdb22",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game grid is populated",
              "fullTitle": "Overall page layout test suite Game grid is populated",
              "timedOut": false,
              "duration": 1118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const gameGrid=await getGameCards(driver);gameGrid.forEach(async card=>{const href=await card.getAttribute(\"href\");href.should.not.equal(\"\")})",
              "err": {},
              "uuid": "6dfa1c04-580c-4a10-bdbb-b3cbe6df5d87",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Genres list is present",
              "fullTitle": "Overall page layout test suite Genres list is present",
              "timedOut": false,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let genresArray=[];const genres=await getGenresArray(driver);for(let genre of genres){const genreText=await genre.getText();genresArray.push(genreText)}genresArray.should.have.same.deep.members(GENRES)",
              "err": {},
              "uuid": "2189bcdb-9d0b-4d7f-adba-d151551509a5",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Platform dropdown",
              "fullTitle": "Overall page layout test suite Platform dropdown",
              "timedOut": false,
              "duration": 167,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let platforms=[];const platformList=await getPlatformsArray(driver);for(let platform of platformList){if(await platform.getText()!=\"\")platforms.push(await platform.getText())}platforms.should.have.same.deep.members(PLATFORMS)",
              "err": {
                "message": "AssertionError: expected [ 'All Platforms', 'PC', …(7) ] to have the same members as [ 'All Platforms', 'PC', …(8) ]",
                "estack": "AssertionError: expected [ 'All Platforms', 'PC', …(7) ] to have the same members as [ 'All Platforms', 'PC', …(8) ]\n    at Context.<anonymous> (d:\\Learning\\TestAutomation\\Gamehub\\tests\\homePageLayout.test.ts:81:37)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "   \"Android\"\n   \"Apple Macintosh\"\n   \"Linux\"\n   \"Nintendo\"\n+   \"Atari\"\n ]\n"
              },
              "uuid": "311c1762-e530-48dd-be8c-69983594db41",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ordering dropdown",
              "fullTitle": "Overall page layout test suite Ordering dropdown",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let orders=[];const orderByList=await getOrderArray(driver);for(let order of orderByList){orders.push(await order.getText())}orders.should.have.same.deep.members(ORDERING)",
              "err": {},
              "uuid": "f0a7c3e7-33f5-4faa-918c-acf0950928be",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search bar",
              "fullTitle": "Overall page layout test suite Search bar",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const searchBar=await getSearchBar(driver);await searchBar.sendKeys(\"Test string\");const inputValue=await searchBar.getAttribute(\"value\");inputValue.should.equal(\"Test string\")",
              "err": {},
              "uuid": "d47f869a-10c2-4641-bb66-de9bfe9db7e0",
              "parentUUID": "cba6fec2-e7d8-4593-96f4-af8015502351",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db591bf3-2649-4058-b013-4cbf26232b95",
            "ddd32981-8d88-4d1b-ba67-fbeebec1e538",
            "86a4644f-14f7-45fe-875b-15fcba76b444",
            "f74ff4e6-8d48-4fcf-9e32-412dc1cfdb22",
            "6dfa1c04-580c-4a10-bdbb-b3cbe6df5d87",
            "2189bcdb-9d0b-4d7f-adba-d151551509a5",
            "f0a7c3e7-33f5-4faa-918c-acf0950928be",
            "d47f869a-10c2-4641-bb66-de9bfe9db7e0"
          ],
          "failures": [
            "311c1762-e530-48dd-be8c-69983594db41"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
          "title": "Filtering games by order",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\orderBy.test.ts",
          "file": "\\tests\\orderBy.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by order\"",
              "fullTitle": "Filtering games by order \"before each\" hook in \"Filtering games by order\"",
              "timedOut": false,
              "duration": 1450,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\");const filterDropdowns=await driver.wait(until.elementsLocated(By.css(\".chakra-menu__group\")),5e3);orderDropdown=filterDropdowns[1];orderButton=await orderDropdown.findElement(By.css(\"button\"))",
              "err": {},
              "uuid": "df5a6c18-21a7-4c64-9c33-e5a85f2dcffc",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by order\"",
              "fullTitle": "Filtering games by order \"after each\" hook in \"Filtering games by order\"",
              "timedOut": false,
              "duration": 1031,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "56a6568d-7384-4f42-9234-970614661922",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default order",
              "fullTitle": "Filtering games by order Default order",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultSelection=await orderDropdown.findElement(By.css(\".css-xl71ch\")).getText();defaultSelection.should.equal(\"Order by: Relevance\")",
              "err": {},
              "uuid": "567a3b07-e071-4fbd-a44c-c8891662384d",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menu can be expanded and collapsed",
              "fullTitle": "Filtering games by order Menu can be expanded and collapsed",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\");await orderButton.click();dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\");await orderButton.click();dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\")",
              "err": {},
              "uuid": "457686ae-d778-4aad-bdcd-205f6d635b6f",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected order styling updates when selected",
              "fullTitle": "Filtering games by order Selected order styling updates when selected",
              "timedOut": false,
              "duration": 3693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orders=await orderDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));const defaultColor=await orders[orders.length-1].getCssValue(\"color\");const defaultSize=await orders[orders.length-1].getCssValue(\"font-size\");for(const order of orders){await driver.sleep(500);await orderButton.click();await order.click();await orderButton.click();const selectedColor=await order.getCssValue(\"color\");const selectedSize=await order.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize);await orderButton.click()}",
              "err": {},
              "uuid": "506fb655-0b27-4a09-ba97-138b05563dfa",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selecting a order refetches the games",
              "fullTitle": "Filtering games by order Selecting a order refetches the games",
              "timedOut": false,
              "duration": 6270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orders=await orderDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));for(let index=1;index<orders.length;index++){const gameTitles=await getGameCardsTitles(driver);await driver.sleep(500);await orderButton.click();await orders[index].click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles)}",
              "err": {},
              "uuid": "40a8de1f-fb67-4e00-9121-8358b4c8127f",
              "parentUUID": "5812f940-2c5b-4ddd-8652-c6a00a77205f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "567a3b07-e071-4fbd-a44c-c8891662384d",
            "457686ae-d778-4aad-bdcd-205f6d635b6f",
            "506fb655-0b27-4a09-ba97-138b05563dfa",
            "40a8de1f-fb67-4e00-9121-8358b4c8127f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10049,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
          "title": "Filtering games by platform",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\platforms.test.ts",
          "file": "\\tests\\platforms.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"before each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1478,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\");const filterDropdowns=await driver.wait(until.elementsLocated(By.css(\".chakra-menu__group\")),5e3);platformDropdown=filterDropdowns[0];platformButton=await platformDropdown.findElement(By.css(\"button\"))",
              "err": {},
              "uuid": "dffbb66b-8edd-4954-a86a-0f44815e37f1",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"after each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1037,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "f92f372e-057c-469c-bc32-4c1e558ca69b",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default platform",
              "fullTitle": "Filtering games by platform Default platform",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultSelection=await platformDropdown.findElement(By.css(\".css-xl71ch\")).getText();defaultSelection.should.equal(\"All Platforms\")",
              "err": {},
              "uuid": "6c7f8e65-1e91-414e-8a81-732d5e33eea1",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menu can be expanded and collapsed",
              "fullTitle": "Filtering games by platform Menu can be expanded and collapsed",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\")",
              "err": {},
              "uuid": "0ec9beed-3505-42a8-a7dc-08eb9b4762cc",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected platform styling updates when selected",
              "fullTitle": "Filtering games by platform Selected platform styling updates when selected",
              "timedOut": false,
              "duration": 6624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const platforms=await platformDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));const defaultColor=await platforms[platforms.length-1].getCssValue(\"color\");const defaultSize=await platforms[platforms.length-1].getCssValue(\"font-size\");for(const platform of platforms){await platformButton.click();await driver.sleep(200);await platform.click();await driver.sleep(200);await platformButton.click();const selectedColor=await platform.getCssValue(\"color\");const selectedSize=await platform.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize);await platformButton.click();await driver.sleep(200)}",
              "err": {},
              "uuid": "bf6ba7f2-22f6-47b5-96ec-9039d75ceca6",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selecting a platform refetches the games",
              "fullTitle": "Filtering games by platform Selecting a platform refetches the games",
              "timedOut": false,
              "duration": 12759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const platforms=await platformDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));for(let index=2;index<platforms.length;index++){const gameTitles=await getGameCardsTitles(driver);await driver.sleep(500);await platformButton.click();await platforms[index].click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles);await driver.sleep(500)}",
              "err": {},
              "uuid": "0216ea60-0af4-48e0-8ed1-6714a7ea564a",
              "parentUUID": "8792d575-0613-4fdc-9a6a-7473e0c784cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c7f8e65-1e91-414e-8a81-732d5e33eea1",
            "0ec9beed-3505-42a8-a7dc-08eb9b4762cc",
            "bf6ba7f2-22f6-47b5-96ec-9039d75ceca6",
            "0216ea60-0af4-48e0-8ed1-6714a7ea564a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports/",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}