{
  "stats": {
    "suites": 6,
    "tests": 31,
    "passes": 31,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-11T02:43:21.923Z",
    "end": "2024-04-11T02:46:51.490Z",
    "duration": 209567,
    "testsRegistered": 31,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed9f4403-ce6d-4e6a-98df-16b5f463068e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
          "title": "Individual game pages",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\gamePages.test.ts",
          "file": "\\tests\\gamePages.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Individual game pages\"",
              "fullTitle": "Individual game pages \"before each\" hook in \"Individual game pages\"",
              "timedOut": false,
              "duration": 1351,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup()",
              "err": {},
              "uuid": "0c0218d7-dd72-440a-b24e-4956a9161f79",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Individual game pages\"",
              "fullTitle": "Individual game pages \"after each\" hook in \"Individual game pages\"",
              "timedOut": false,
              "duration": 1039,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "5c65824f-0d5c-4290-94d1-13577ffad824",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Navigating to a game page",
              "fullTitle": "Individual game pages Navigating to a game page",
              "timedOut": false,
              "duration": 3743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){const href=await gameGrid[i].getAttribute(\"href\");await gameGrid[i].click();await driver.wait(until.elementLocated(By.css(\"h2.css-1dklj6k\"))).getText();const currentURL=await driver.getCurrentUrl();currentURL.should.be.equal(href);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "226d4b5a-6dd2-4c1e-9015-b7ee824b6aae",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game page title matches the page opened",
              "fullTitle": "Individual game pages Game page title matches the page opened",
              "timedOut": false,
              "duration": 3604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){const gameTitle=await gameGrid[i].findElement(By.css(\"h2\")).getText();await gameGrid[i].click();const currentGame=await driver.wait(until.elementLocated(By.css(\"h2.css-1dklj6k\"))).getText();currentGame.should.be.equal(gameTitle);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "4ba2b06e-33ca-47e1-89b5-85b06c371fc0",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game description is present and can be expanded/collapsed",
              "fullTitle": "Individual game pages Game description is present and can be expanded/collapsed",
              "timedOut": false,
              "duration": 3902,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const gameDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();await driver.findElement(By.css(\".css-1v8my8o button\")).click();const expandedDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();expandedDescription.length.should.be.greaterThan(gameDescription.length);await driver.findElement(By.css(\".css-1v8my8o button\")).click();const collapsedDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();collapsedDescription.length.should.be.equal(gameDescription.length);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "d8fab919-d0e4-4b93-800a-051d53d3da93",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Available platforms are displayed",
              "fullTitle": "Individual game pages Available platforms are displayed",
              "timedOut": false,
              "duration": 4003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(1) p\")));let platforms=[];for(let plat of dataList){platforms.push(await plat.getText())}PLATFORMS.should.include.members(platforms);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "b505583f-5012-4634-a611-3d9c172be364",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Available genres are displayed",
              "fullTitle": "Individual game pages Available genres are displayed",
              "timedOut": false,
              "duration": 3958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(3) p\")));let genres=[];for(let genre of dataList){genres.push(await genre.getText())}GENRES.should.include.members(genres);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "838d73f4-edd0-474b-ac6f-10b7919d7f79",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Applicable Metascore is displayed",
              "fullTitle": "Individual game pages Applicable Metascore is displayed",
              "timedOut": false,
              "duration": 3509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const metaScore=await driver.wait(until.elementLocated(By.css(\"dl > div:nth-child(2) span\"))).getText();parseInt(metaScore).should.be.greaterThan(0).and.lessThan(101);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "a8266066-8147-4f5c-a852-7e71b8c94a3b",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Publishers are displayed",
              "fullTitle": "Individual game pages Publishers are displayed",
              "timedOut": false,
              "duration": 3755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(4) p\")));let publishers=[];for(let publisher of dataList){publishers.push(await publisher.getText())}publishers.should.not.be.empty;const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "5a658024-19c2-4780-8411-be8f60f1dba7",
              "parentUUID": "ed9d365d-fc4f-4ddd-a3e1-dae433e00313",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "226d4b5a-6dd2-4c1e-9015-b7ee824b6aae",
            "4ba2b06e-33ca-47e1-89b5-85b06c371fc0",
            "d8fab919-d0e4-4b93-800a-051d53d3da93",
            "b505583f-5012-4634-a611-3d9c172be364",
            "838d73f4-edd0-474b-ac6f-10b7919d7f79",
            "a8266066-8147-4f5c-a852-7e71b8c94a3b",
            "5a658024-19c2-4780-8411-be8f60f1dba7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "776cc532-d7ad-46de-b89d-55c879fe24ed",
          "title": "Searching games by genre",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\genres.test.ts",
          "file": "\\tests\\genres.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Searching games by genre\"",
              "fullTitle": "Searching games by genre \"before each\" hook in \"Searching games by genre\"",
              "timedOut": false,
              "duration": 1489,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup();genres=await getGenresArray(driver)",
              "err": {},
              "uuid": "9e4f8ff2-2c16-43d6-8cf4-7fc67e139b8c",
              "parentUUID": "776cc532-d7ad-46de-b89d-55c879fe24ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Searching games by genre\"",
              "fullTitle": "Searching games by genre \"after each\" hook in \"Searching games by genre\"",
              "timedOut": false,
              "duration": 1038,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "4bd22da0-0d62-4589-b8e8-bb54177ad6c2",
              "parentUUID": "776cc532-d7ad-46de-b89d-55c879fe24ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Selected genre style",
              "fullTitle": "Searching games by genre Selected genre style",
              "timedOut": false,
              "duration": 10917,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultColor=await genres[genres.length-1].getCssValue(\"color\");const defaultSize=await genres[genres.length-1].getCssValue(\"font-size\");for(const genre of genres){await genre.click();await driver.sleep(500);const selectedColor=await genre.getCssValue(\"color\");const selectedSize=await genre.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize)}",
              "err": {},
              "uuid": "573171c2-6cb6-4993-9a17-93208cb66dd1",
              "parentUUID": "776cc532-d7ad-46de-b89d-55c879fe24ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page header updates with the selected genre title",
              "fullTitle": "Searching games by genre Page header updates with the selected genre title",
              "timedOut": false,
              "duration": 11001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const genre of genres){await genre.click();const selectedGenre=await genre.getText();const pageHeader=await getPageHeader(driver);if(selectedGenre===\"All Genres\")pageHeader.should.equal(\"Games\");else pageHeader.should.equal(selectedGenre);await driver.sleep(500)}",
              "err": {},
              "uuid": "80024c7a-f63a-489b-a535-8d1e0d02ed0d",
              "parentUUID": "776cc532-d7ad-46de-b89d-55c879fe24ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game grid updates when genre is selected",
              "fullTitle": "Searching games by genre Game grid updates when genre is selected",
              "timedOut": false,
              "duration": 22711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const genre of genres){if(await genre.getText()===\"All Genres\")continue;const gameTitles=await getGameCardsTitles(driver);await genre.click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles);await driver.sleep(500)}",
              "err": {},
              "uuid": "8091ac8e-eca1-4264-9a9d-4fff74389fb4",
              "parentUUID": "776cc532-d7ad-46de-b89d-55c879fe24ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "573171c2-6cb6-4993-9a17-93208cb66dd1",
            "80024c7a-f63a-489b-a535-8d1e0d02ed0d",
            "8091ac8e-eca1-4264-9a9d-4fff74389fb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5e9be9d8-9846-4833-8659-4543a1a54d63",
          "title": "Overall page layout test suite",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\homePageLayout.test.ts",
          "file": "\\tests\\homePageLayout.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Overall page layout test suite\"",
              "fullTitle": "Overall page layout test suite \"before each\" hook in \"Overall page layout test suite\"",
              "timedOut": false,
              "duration": 1452,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup()",
              "err": {},
              "uuid": "abffdf9d-9ff9-41d4-9a27-1b2cde6ac8b0",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Overall page layout test suite\"",
              "fullTitle": "Overall page layout test suite \"after each\" hook in \"Overall page layout test suite\"",
              "timedOut": false,
              "duration": 1038,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "605f4a7a-2002-417d-9ccf-926726dbdef3",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Page title is correct",
              "fullTitle": "Overall page layout test suite Page title is correct",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const title=await driver.getTitle();title.should.equal(\"Game Explorer\")",
              "err": {},
              "uuid": "a9d0cc19-6082-4484-a3a9-406d3052df9e",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page header is correct",
              "fullTitle": "Overall page layout test suite Page header is correct",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const header=await getPageHeader(driver);header.should.equal(\"Games\")",
              "err": {},
              "uuid": "7b3503fd-0860-4a7c-965e-58a404b37a7b",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Page logo is present and interactable",
              "fullTitle": "Overall page layout test suite Page logo is present and interactable",
              "timedOut": false,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await driver.wait(until.elementIsVisible(logo),1e4);await logo.click();const currentURL=await driver.getCurrentUrl();currentURL.should.equal(\"https://game-explorer-lac-sigma.vercel.app/\")",
              "err": {},
              "uuid": "d85b52f3-64cf-4efc-b658-3c569a0cef46",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dark / Light mode switch",
              "fullTitle": "Overall page layout test suite Dark / Light mode switch",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const modeSwitch=await driver.findElement(By.css(\"nav.css-134xcib button\"));const initialColor=await getRGBcode(driver);await driver.wait(until.elementIsVisible(modeSwitch),1e4);await modeSwitch.click();const newColor=await getRGBcode(driver);if(initialColor===\"26, 32, 44\")newColor.should.equal(\"255, 255, 255\");else newColor.should.equal(\"26, 32, 44\")",
              "err": {},
              "uuid": "bdc2e01b-ecc6-4f03-83ca-86df5ef143c0",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game grid is populated",
              "fullTitle": "Overall page layout test suite Game grid is populated",
              "timedOut": false,
              "duration": 1115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const gameGrid=await getGameCards(driver);gameGrid.forEach(async card=>{const href=await card.getAttribute(\"href\");href.should.not.equal(\"\")})",
              "err": {},
              "uuid": "92eb982c-7e8a-4177-8050-d24eed9178e2",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Genres list is present",
              "fullTitle": "Overall page layout test suite Genres list is present",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let genresArray=[];const genres=await getGenresArray(driver);for(let genre of genres){const genreText=await genre.getText();genresArray.push(genreText)}genresArray.should.have.same.deep.members(GENRES)",
              "err": {},
              "uuid": "e6cdb2aa-5efb-46ae-94e8-a314e0ab5376",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Platform dropdown",
              "fullTitle": "Overall page layout test suite Platform dropdown",
              "timedOut": false,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let platforms=[];const platformList=await getPlatformsArray(driver);for(let platform of platformList){if(await platform.getText()!=\"\")platforms.push(await platform.getText())}platforms.should.have.same.deep.members(PLATFORMS)",
              "err": {},
              "uuid": "70b9692c-6aa7-41be-87c9-a167b94da46b",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ordering dropdown",
              "fullTitle": "Overall page layout test suite Ordering dropdown",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let orders=[];const orderByList=await getOrderArray(driver);for(let order of orderByList){orders.push(await order.getText())}orders.should.have.same.deep.members(ORDERING)",
              "err": {},
              "uuid": "3eb7fef5-34a8-4d29-9f2a-69bc50153980",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search bar",
              "fullTitle": "Overall page layout test suite Search bar",
              "timedOut": false,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const searchBar=await getSearchBar(driver);await searchBar.sendKeys(\"Test string\");const inputValue=await searchBar.getAttribute(\"value\");inputValue.should.equal(\"Test string\")",
              "err": {},
              "uuid": "cd64eb70-f8ff-4ff6-853c-d9612a9086be",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Infinite scrolling fetching",
              "fullTitle": "Overall page layout test suite Infinite scrolling fetching",
              "timedOut": false,
              "duration": 7646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "async function scrollAndCheckGrid(){const timeout=2e4;const initialGrid=await getGameCards(driver);await driver.executeScript(\"window.scrollBy(0, 2000);\");await driver.wait(async function(){const afterScrollGrid=await getGameCards(driver);return initialGrid.length<afterScrollGrid.length},timeout);return true}__name(scrollAndCheckGrid,\"scrollAndCheckGrid\");for(let i=0;i<4;i++){let countResult=await scrollAndCheckGrid();countResult.should.be.true;await driver.sleep(1e3)}",
              "err": {},
              "uuid": "0d1f63e5-2408-4cd6-9221-b4368e2d285d",
              "parentUUID": "5e9be9d8-9846-4833-8659-4543a1a54d63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9d0cc19-6082-4484-a3a9-406d3052df9e",
            "7b3503fd-0860-4a7c-965e-58a404b37a7b",
            "d85b52f3-64cf-4efc-b658-3c569a0cef46",
            "bdc2e01b-ecc6-4f03-83ca-86df5ef143c0",
            "92eb982c-7e8a-4177-8050-d24eed9178e2",
            "e6cdb2aa-5efb-46ae-94e8-a314e0ab5376",
            "70b9692c-6aa7-41be-87c9-a167b94da46b",
            "3eb7fef5-34a8-4d29-9f2a-69bc50153980",
            "cd64eb70-f8ff-4ff6-853c-d9612a9086be",
            "0d1f63e5-2408-4cd6-9221-b4368e2d285d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9727,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d173174d-f962-4f5b-b289-353a3ef3156b",
          "title": "Filtering games by order",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\orderBy.test.ts",
          "file": "\\tests\\orderBy.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by order\"",
              "fullTitle": "Filtering games by order \"before each\" hook in \"Filtering games by order\"",
              "timedOut": false,
              "duration": 1519,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup();const filterDropdowns=await driver.wait(until.elementsLocated(By.css(\".chakra-menu__group\")),5e3);orderDropdown=filterDropdowns[1];orderButton=await orderDropdown.findElement(By.css(\"button\"))",
              "err": {},
              "uuid": "cba26542-4603-4e98-b425-3f31c9e23cfa",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by order\"",
              "fullTitle": "Filtering games by order \"after each\" hook in \"Filtering games by order\"",
              "timedOut": false,
              "duration": 1034,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "ff698e67-37aa-4104-a2d5-170fc05826c2",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default order",
              "fullTitle": "Filtering games by order Default order",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultSelection=await orderDropdown.findElement(By.css(\".css-xl71ch\")).getText();defaultSelection.should.equal(\"Order by: Relevance\")",
              "err": {},
              "uuid": "91d0560b-0ec8-4165-b94f-96bdf47fca8e",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menu can be expanded and collapsed",
              "fullTitle": "Filtering games by order Menu can be expanded and collapsed",
              "timedOut": false,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\");await orderButton.click();dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\");await orderButton.click();dropdownStatus=await orderButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\")",
              "err": {},
              "uuid": "0237e17c-1ddf-43a5-ae39-7702f1acd425",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected order styling updates when selected",
              "fullTitle": "Filtering games by order Selected order styling updates when selected",
              "timedOut": false,
              "duration": 3674,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orders=await orderDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));const defaultColor=await orders[orders.length-1].getCssValue(\"color\");const defaultSize=await orders[orders.length-1].getCssValue(\"font-size\");for(const order of orders){await driver.sleep(500);await orderButton.click();await order.click();await orderButton.click();const selectedColor=await order.getCssValue(\"color\");const selectedSize=await order.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize);await orderButton.click()}",
              "err": {},
              "uuid": "32c188bf-7f6d-4aaa-86e3-0359a6abd78d",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selecting a order refetches the games",
              "fullTitle": "Filtering games by order Selecting a order refetches the games",
              "timedOut": false,
              "duration": 6623,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orders=await orderDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));for(let index=1;index<orders.length;index++){const gameTitles=await getGameCardsTitles(driver);await driver.sleep(500);await orderButton.click();await orders[index].click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles)}",
              "err": {},
              "uuid": "e9a8decf-e741-410d-8e82-865ae8c696fb",
              "parentUUID": "d173174d-f962-4f5b-b289-353a3ef3156b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91d0560b-0ec8-4165-b94f-96bdf47fca8e",
            "0237e17c-1ddf-43a5-ae39-7702f1acd425",
            "32c188bf-7f6d-4aaa-86e3-0359a6abd78d",
            "e9a8decf-e741-410d-8e82-865ae8c696fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
          "title": "Filtering games by platform",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\platforms.test.ts",
          "file": "\\tests\\platforms.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"before each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1376,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup();const filterDropdowns=await driver.wait(until.elementsLocated(By.css(\".chakra-menu__group\")),5e3);platformDropdown=filterDropdowns[0];platformButton=await platformDropdown.findElement(By.css(\"button\"))",
              "err": {},
              "uuid": "000b759b-8519-4d91-a177-1533d1cc600a",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"after each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1033,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "8fd24bd7-a985-4ad7-bd71-90870bc98c89",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default platform",
              "fullTitle": "Filtering games by platform Default platform",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const defaultSelection=await platformDropdown.findElement(By.css(\".css-xl71ch\")).getText();defaultSelection.should.equal(\"All Platforms\")",
              "err": {},
              "uuid": "1e0f2795-6f7c-48f9-8165-2f15dc2339ea",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menu can be expanded and collapsed",
              "fullTitle": "Filtering games by platform Menu can be expanded and collapsed",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\")",
              "err": {},
              "uuid": "361c3e1f-bfb8-42b2-b03c-a0652837dc96",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected platform styling updates when selected",
              "fullTitle": "Filtering games by platform Selected platform styling updates when selected",
              "timedOut": false,
              "duration": 6604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const platforms=await platformDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));const defaultColor=await platforms[platforms.length-1].getCssValue(\"color\");const defaultSize=await platforms[platforms.length-1].getCssValue(\"font-size\");for(const platform of platforms){await platformButton.click();await driver.sleep(200);await platform.click();await driver.sleep(200);await platformButton.click();const selectedColor=await platform.getCssValue(\"color\");const selectedSize=await platform.getCssValue(\"font-size\");selectedColor.should.not.equal(defaultColor);selectedSize.should.not.equal(defaultSize);await platformButton.click();await driver.sleep(200)}",
              "err": {},
              "uuid": "1fb96311-24fd-4c97-aa72-339cf091295d",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selecting a platform refetches the games",
              "fullTitle": "Filtering games by platform Selecting a platform refetches the games",
              "timedOut": false,
              "duration": 14732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const platforms=await platformDropdown.findElements(By.css(\".chakra-menu__menu-list button\"));for(let index=2;index<platforms.length;index++){const gameTitles=await getGameCardsTitles(driver);await driver.sleep(500);await platformButton.click();await platforms[index].click();const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles);await driver.sleep(500)}",
              "err": {},
              "uuid": "553a53ca-2b8b-4f07-8bab-1131d3e5d500",
              "parentUUID": "1494d7e4-2553-45c8-9eb5-87a814fd4f45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e0f2795-6f7c-48f9-8165-2f15dc2339ea",
            "361c3e1f-bfb8-42b2-b03c-a0652837dc96",
            "1fb96311-24fd-4c97-aa72-339cf091295d",
            "553a53ca-2b8b-4f07-8bab-1131d3e5d500"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
          "title": "Filtering games by platform",
          "fullFile": "D:\\WebDevProjects\\TestSuites\\GameExplorerE2E\\tests\\search.test.ts",
          "file": "\\tests\\search.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"before each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1371,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await initialChromeStartup();searchBar=await getSearchBar(driver)",
              "err": {},
              "uuid": "6d0f2535-4b94-44fe-91ba-f18f903e1c07",
              "parentUUID": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"after each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1029,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "d17274d5-d755-4832-b281-9ff9aec4f874",
              "parentUUID": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default search value",
              "fullTitle": "Filtering games by platform Default search value",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const inputValue=await searchBar.getAttribute(\"value\");inputValue.should.equal(\"\")",
              "err": {},
              "uuid": "e7e5e3f3-7ecf-4c0f-806d-5f00c14f2f9c",
              "parentUUID": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using search refetches the games",
              "fullTitle": "Filtering games by platform Using search refetches the games",
              "timedOut": false,
              "duration": 10772,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const input of searchInputs){const gameTitles=await getGameCardsTitles(driver);await searchBar.sendKeys(input);await driver.sleep(1e3);const newGameTitles=await getGameCardsTitles(driver);gameTitles.should.not.have.same.deep.members(newGameTitles);await searchBar.clear()}",
              "err": {},
              "uuid": "4be8b817-5171-40c5-ba09-fdd39d4f1868",
              "parentUUID": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search results match search input",
              "fullTitle": "Filtering games by platform Search results match search input",
              "timedOut": false,
              "duration": 9639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for(const input of searchInputs){await searchBar.sendKeys(input);await driver.sleep(1e3);const newGameTitles=await getGameCardsTitles(driver);const containsInputValue=newGameTitles.every(str=>str.toLowerCase().includes(input.toLowerCase()));containsInputValue.should.be.true;await searchBar.clear()}",
              "err": {},
              "uuid": "9c73b8b0-5dde-4e03-b081-990bc3f65036",
              "parentUUID": "ca3b3848-0905-4a8b-afd8-a3c2c461df41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7e5e3f3-7ecf-4c0f-806d-5f00c14f2f9c",
            "4be8b817-5171-40c5-ba09-fdd39d4f1868",
            "9c73b8b0-5dde-4e03-b081-990bc3f65036"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports/",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}