{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-20T03:27:31.060Z",
    "end": "2024-03-20T03:27:38.440Z",
    "duration": 7380,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "942a7ef1-067c-4f25-a12d-5b4508d58a74",
      "title": "",
      "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\secondTest.test.ts",
      "file": "\\tests\\secondTest.test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32d0e259-c50f-4928-8e5b-e23957573815",
          "title": "Main page #2",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\secondTest.test.ts",
          "file": "\\tests\\secondTest.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adding specific item",
              "fullTitle": "Main page #2 Adding specific item",
              "timedOut": null,
              "duration": 2289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"specific item\",Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(\"specific item\");await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "fc26b86b-5aa9-46e9-82b6-815270caf450",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding specific item",
              "fullTitle": "Main page #2 Adding specific item",
              "timedOut": null,
              "duration": 2374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"specific item\",Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(\"specific item\");await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "c8dcf1f5-7fff-41b6-b457-42ab50cb5a33",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding specific item",
              "fullTitle": "Main page #2 Adding specific item",
              "timedOut": null,
              "duration": 2296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"specific item\",Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(\"specific item\");await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "0897785a-6889-4ed9-b775-a4181f87e373",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc26b86b-5aa9-46e9-82b6-815270caf450",
            "c8dcf1f5-7fff-41b6-b457-42ab50cb5a33",
            "0897785a-6889-4ed9-b775-a4181f87e373"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6959,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports/",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}