{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-26T02:32:37.111Z",
    "end": "2024-03-26T02:33:20.706Z",
    "duration": 43595,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f4329724-b999-4329-a36c-faf705719c5c",
      "title": "",
      "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\gamePages.test.ts",
      "file": "\\tests\\gamePages.test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
          "title": "Individual game pages",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\gamePages.test.ts",
          "file": "\\tests\\gamePages.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Individual game pages\"",
              "fullTitle": "Individual game pages \"before each\" hook in \"Individual game pages\"",
              "timedOut": false,
              "duration": 1332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\")",
              "err": {},
              "uuid": "b90234e3-a9a3-415e-a28b-6ebc8fdb5ea8",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Individual game pages\"",
              "fullTitle": "Individual game pages \"after each\" hook in \"Individual game pages\"",
              "timedOut": false,
              "duration": 1058,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "667e1f93-45f0-42a5-895f-8628113a27e5",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Navigating to a game page",
              "fullTitle": "Individual game pages Navigating to a game page",
              "timedOut": false,
              "duration": 3775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){const href=await gameGrid[i].getAttribute(\"href\");await gameGrid[i].click();await driver.wait(until.elementLocated(By.css(\"h2.css-1dklj6k\"))).getText();const currentURL=await driver.getCurrentUrl();currentURL.should.be.equal(href);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "67618f44-d97d-4b7e-b781-ff3dd16356b3",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game page title matches the page opened",
              "fullTitle": "Individual game pages Game page title matches the page opened",
              "timedOut": false,
              "duration": 3864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){const gameTitle=await gameGrid[i].findElement(By.css(\"h2\")).getText();await gameGrid[i].click();const currentGame=await driver.wait(until.elementLocated(By.css(\"h2.css-1dklj6k\"))).getText();currentGame.should.be.equal(gameTitle);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "dfd2b580-a2e3-4052-991b-422eda8068e1",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Game description is present and can be expanded/collapsed",
              "fullTitle": "Individual game pages Game description is present and can be expanded/collapsed",
              "timedOut": false,
              "duration": 4127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const gameDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();await driver.findElement(By.css(\".css-1v8my8o button\")).click();const expandedDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();expandedDescription.length.should.be.greaterThan(gameDescription.length);await driver.findElement(By.css(\".css-1v8my8o button\")).click();const collapsedDescription=await driver.wait(until.elementLocated(By.css(\".css-1v8my8o p\"))).getText();collapsedDescription.length.should.be.equal(gameDescription.length);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "165fc7ce-eaaf-4476-9c02-ec39e9d40892",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Available platforms are displayed",
              "fullTitle": "Individual game pages Available platforms are displayed",
              "timedOut": false,
              "duration": 3598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(1) p\")));let platforms=[];for(let plat of dataList){platforms.push(await plat.getText())}PLATFORMS.should.include.members(platforms);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "6899ba67-845f-48f1-b8ed-82715d11e9e9",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Available genres are displayed",
              "fullTitle": "Individual game pages Available genres are displayed",
              "timedOut": false,
              "duration": 3540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(3) p\")));let genres=[];for(let genre of dataList){genres.push(await genre.getText())}GENRES.should.include.members(genres);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "7b93e712-b576-45c2-b559-05b72eb7958c",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Applicable Metascore is displayed",
              "fullTitle": "Individual game pages Applicable Metascore is displayed",
              "timedOut": false,
              "duration": 3541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const metaScore=await driver.wait(until.elementLocated(By.css(\"dl > div:nth-child(2) span\"))).getText();parseInt(metaScore).should.be.greaterThan(0).and.lessThan(101);const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "67f08b80-0dd8-4b58-b5c2-c288dea28b1a",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Publishers are displayed",
              "fullTitle": "Individual game pages Publishers are displayed",
              "timedOut": false,
              "duration": 3528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let gameGrid=await getGameCards(driver);for(let i=0;i<gamesToCheck;i++){await gameGrid[i].click();const dataList=await driver.wait(until.elementsLocated(By.css(\"dl > div:nth-child(4) p\")));let publishers=[];for(let publisher of dataList){publishers.push(await publisher.getText())}publishers.should.not.be.empty;const logo=await driver.findElement(By.css(\"nav.css-134xcib a\"));await logo.click();gameGrid=await driver.wait(until.elementsLocated(By.css(\".css-1hmna4a a\")),2e4)}",
              "err": {},
              "uuid": "fc7b2814-0668-4fbe-953e-3758e8713588",
              "parentUUID": "4d40ca4a-7cb0-456d-9e2e-f2c4c967a6a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67618f44-d97d-4b7e-b781-ff3dd16356b3",
            "dfd2b580-a2e3-4052-991b-422eda8068e1",
            "165fc7ce-eaaf-4476-9c02-ec39e9d40892",
            "6899ba67-845f-48f1-b8ed-82715d11e9e9",
            "7b93e712-b576-45c2-b559-05b72eb7958c",
            "67f08b80-0dd8-4b58-b5c2-c288dea28b1a",
            "fc7b2814-0668-4fbe-953e-3758e8713588"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports/",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}