{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-03-23T05:40:42.104Z",
    "end": "2024-03-23T05:40:44.672Z",
    "duration": 2568,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "93786c48-a777-487d-a6e9-676846d8f8c0",
      "title": "",
      "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\platforms.test.ts",
      "file": "\\tests\\platforms.test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "255f6580-da9e-48e1-8ae8-b4c3f137df1f",
          "title": "Filtering games by platform",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\platforms.test.ts",
          "file": "\\tests\\platforms.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"before each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1446,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver=await new Builder().forBrowser(Browser.CHROME).build();await driver.manage().window().maximize();await driver.get(\"https://game-hub-lac-sigma.vercel.app/\");const filterDropdowns=await driver.wait(until.elementsLocated(By.css(\".chakra-menu__group\")),5e3);platformDropdown=filterDropdowns[0]",
              "err": {},
              "uuid": "575689ee-4616-462a-8e83-f732c32c7c56",
              "parentUUID": "255f6580-da9e-48e1-8ae8-b4c3f137df1f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Filtering games by platform\"",
              "fullTitle": "Filtering games by platform \"after each\" hook in \"Filtering games by platform\"",
              "timedOut": false,
              "duration": 1031,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1e3);await driver.quit()",
              "err": {},
              "uuid": "b2219b6b-b3ab-44ef-9f98-34eeaf9248f2",
              "parentUUID": "255f6580-da9e-48e1-8ae8-b4c3f137df1f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Menu can be expanded and collapsed",
              "fullTitle": "Filtering games by platform Menu can be expanded and collapsed",
              "timedOut": false,
              "duration": 86,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const platformButton=await platformDropdown.findElement(By.css(\"button\"));let dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"false\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\");await platformButton.click();dropdownStatus=await platformButton.getAttribute(\"aria-expanded\");dropdownStatus.should.equal(\"true\")",
              "err": {
                "message": "AssertionError: expected 'false' to equal 'true'",
                "estack": "AssertionError: expected 'false' to equal 'true'\n    at Context.<anonymous> (d:\\Learning\\TestAutomation\\Gamehub\\tests\\platforms.test.ts:41:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "7d59c3f7-bb2f-4fb6-9faa-fbc3a14f6eb8",
              "parentUUID": "255f6580-da9e-48e1-8ae8-b4c3f137df1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7d59c3f7-bb2f-4fb6-9faa-fbc3a14f6eb8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 86,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports/",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}