{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2024-03-20T01:58:46.035Z",
    "end": "2024-03-20T01:58:51.339Z",
    "duration": 5304,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ee1f561a-6623-4e15-a3f7-758b1a362735",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c2b021a-9a61-42f1-8c39-23f08197b469",
          "title": "Main page #1",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\firstTest.test.ts",
          "file": "\\tests\\firstTest.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Added li should appear in the ul and the text should match",
              "fullTitle": "Main page #1 Added li should appear in the ul and the text should match",
              "timedOut": null,
              "duration": 2514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();const todoText=\"Test input\";try{await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(todoText,Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(todoText)}finally{await driver.sleep(1e3);await driver.quit()}",
              "err": {},
              "uuid": "d8e90bcc-0ad5-4952-b442-038728f3068a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8e90bcc-0ad5-4952-b442-038728f3068a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2514,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "8dfdb85c-e3c3-4883-bd7f-f5ca7b20ce14",
          "title": "Main page #2",
          "fullFile": "D:\\Learning\\TestAutomation\\Gamehub\\tests\\secondTest.test.ts",
          "file": "\\tests\\secondTest.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Added li should appear in the ul and the text should match",
              "fullTitle": "Main page #2 Added li should appear in the ul and the text should match",
              "timedOut": null,
              "duration": 2436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();const todoText=\"Test input\";try{await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(todoText,Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(todoText)}finally{await driver.sleep(1e3);await driver.quit()}",
              "err": {},
              "uuid": "4c158e1f-440e-4380-8b13-9cd0bcd1359f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added li should appear in the ul and the text should match",
              "fullTitle": "Main page #2 Added li should appear in the ul and the text should match",
              "timedOut": null,
              "duration": 2387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const driver=await new Builder().forBrowser(Browser.CHROME).build();const todoText=\"Test input\";try{await driver.get(\"https://lambdatest.github.io/sample-todo-app/\");await driver.findElement(By.id(\"sampletodotext\")).sendKeys(todoText,Key.RETURN);const checkedTest=await driver.findElement(By.css(\"ul li:last-child\")).getText();checkedTest.should.equal(\"todoText\")}finally{await driver.sleep(1e3);await driver.quit()}",
              "err": {
                "message": "AssertionError: expected 'Test input' to equal 'todoText'",
                "estack": "AssertionError: expected 'Test input' to equal 'todoText'\n    at Context.<anonymous> (d:\\Learning\\TestAutomation\\Gamehub\\tests\\secondTest.test.ts:25:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Test input\n+ todoText\n"
              },
              "uuid": "0beb424c-9d6e-46e2-be8d-b339e9d0205e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c158e1f-440e-4380-8b13-9cd0bcd1359f"
          ],
          "failures": [
            "0beb424c-9d6e-46e2-be8d-b339e9d0205e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4823,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}